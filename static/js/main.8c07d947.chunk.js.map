{"version":3,"sources":["img/LOGOONO.jpg","components/js/Opening.js","components/Functions/HttpFunctions.js","store/acions/mainAction.js","store/acions/actionTypes.js","components/js/Questionnaire.js","components/js/Explanation.js","components/js/Simulation.js","containers/js/MainPage.js","App.js","serviceWorker.js","store/reduciers/mainReducer.js","index.js"],"names":["module","exports","Opening","state","className","style","width","textAlign","id","src","onoLogo","alt","Component","checkStatus","response","status","error","Error","statusText","changeStageDispach","newStage","dispatch","type","val","changeStage","Questionnaire","quest1","quest2","quest3","quest4","quest5","quest6","quest7","quest8","quest9","quest10","quest11","quest12","gender","age","familyStatus","numOfKids","totalWorkYears","religionStatus","numOfEmployers","insurenceEmployers","areYouManager","numOfEmployees","test","console","log","updateState","e","key","setState","target","value","insertToServer","versionNumer","Math","round","random","userDetails","mobileDevice","window","orientation","navigator","userAgent","indexOf","createTime","Date","toString","simulationType","props","updateVersion","insertUserDetails","selectOptions","Table","Header","Row","HeaderCell","color","Body","Cell","this","map","s","onChangeCapture","Input","Button","size","onClick","connect","fetch","location","method","body","JSON","stringify","headers","then","httpFunctions","text","data","catch","alert","mainAction","versionNum","Explanation","nextLevel","finishExplain","userId","explanationText","version","Message","stage","main","finishTime","finishExplanation","Simulation","isMobile","marginRight","marginTop","height","options","responsive","maintainAspectRatio","defaultFontSize","hover","legend","display","position","chartData","MainPage","componentDidMount","setTimeout","Fragment","App","Boolean","hostname","match","initialState","cycleNum","totalPortfolioAssets","totalMarketAssets","totalPortfolioYield","totalMarketYield","labels","datasets","label","borderColor","reducer","action","rootReducer","combineReducers","mainReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c07d947.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LOGOONO.34641b59.jpg\";","import React, { Component } from 'react';\r\nimport onoLogo from '../../img/LOGOONO.jpg'\r\nimport '../css/animationCss.css'\r\nimport '../css/opening.css'\r\n\r\nclass Opening\r\n extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className=\" fadeInUp animated\" style={{width:'100%',textAlign:'center'}}>\r\n                <img id=\"opening_logoImg\" src={onoLogo} alt=\"onoLogo\" />\r\n            </div>\r\n            \r\n         );\r\n    }\r\n}\r\n \r\nexport default Opening\r\n;","export const checkStatus = (response)=> {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return response\r\n    } else {\r\n      let error = new Error(response.statusText);\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  export const parseJSON = (response) =>{\r\n    return response.json();\r\n  }","import * as actionTypes from '../acions/actionTypes'\r\nimport * as location from '../../components/Functions/locations'\r\nimport * as httpFunctions from '../../components/Functions/HttpFunctions'\r\nimport 'whatwg-fetch'\r\n/////////////////////////INSERT NEW USER////////////////////////////\r\nexport const insertNewUser = (userId) =>\r\n{\r\n    return {\r\n            type: actionTypes.INSERT_NEW_USER,\r\n            val:userId\r\n            };\r\n      \r\n}\r\n\r\nexport const insertNewUserDetails = (userDetails) =>\r\n{\r\n    return (dispatch)  =>\r\n    {\r\n        fetch(location.serverAdress()+\"/User/NewUser\", {\r\n            method: 'POST',\r\n            body: JSON.stringify(userDetails)\r\n            ,headers: {\r\n                'Content-Type':'application/json'\r\n            //   'Authorization': localStorage.getItem(\"token\")\r\n            }\r\n          })\r\n        .then(httpFunctions.checkStatus)\r\n        .then(response=>{\r\n            return response.text();\r\n        })\r\n        // .then(httpFunctions.parseJSON)\r\n        .then(function(data) {\r\n          console.log('request succeeded: '+location.serverAdress()+\"/User/NewUser\", data)\r\n          dispatch(insertNewUser(data));\r\n        }).catch(function(error) {\r\n          console.log('request failed', error.data)\r\n          alert(\"Somthing went wrong, send that message to the admin: \"+error.data);\r\n\r\n        })\r\n \r\n    }\r\n}\r\n////////////////UPDATE FINISH EXPLANATION///////////////////////////\r\nexport const finishExplanation = () =>\r\n{\r\n    return {\r\n            type: actionTypes.FINISH_EXPLAINATION,\r\n            };\r\n      \r\n}\r\nexport const finishExplanationUpdate = (userId,finishTime)=>{\r\n  return (dispatch)  =>\r\n    {\r\n      fetch(location.serverAdress()+\"/User/finishExplain\", {\r\n        method: 'POST',\r\n        body:JSON.stringify({userId:userId,finishExplanation:finishTime\r\n        })\r\n        ,headers: {\r\n            'Content-Type':'application/json'\r\n        }\r\n      })\r\n      .then(httpFunctions.checkStatus)\r\n        .then(function(data) {\r\n          dispatch(finishExplanation());\r\n          console.log('request succeeded: '+location.serverAdress()+\"/User/finishExplain/\"+finishTime, data)     \r\n        }).catch(function(error) {\r\n          console.log('request failed', error.data)\r\n        })\r\n    }\r\n}\r\n\r\n///////////////CHANGE STAGE///////////////////////////\r\nexport const changeStage = (newStage) =>\r\n{\r\n    return {\r\n            type: actionTypes.CHANGE_STAGE,\r\n            val:newStage\r\n            };\r\n      \r\n}\r\n\r\nexport const changeStageDispach = (newStage) =>\r\n{\r\n    return (dispatch)  =>\r\n    {    \r\n      dispatch(changeStage(newStage));\r\n    }\r\n}\r\n/////////////////\r\nexport const UpdateVersion = (versionNumber) =>\r\n{\r\n  return {\r\n    type: actionTypes.UPDATE_VERSION_NUMBER,\r\n    val:versionNumber\r\n    };\r\n}\r\n","export const INSERT_NEW_USER = 'INSERT_NEW_USER';\r\nexport const CHANGE_STAGE = 'CHANGE_STAGE';\r\nexport const UPDATE_VERSION_NUMBER = 'UPDATE_VERSION_NUMBER';\r\nexport const FINISH_EXPLAINATION = 'FINISH_EXPLAINATION';\r\n","import React, { Component } from 'react';\r\nimport { Table,Input, Button } from 'semantic-ui-react';\r\nimport '../css/questionnaire.css'\r\nimport {connect} from 'react-redux';\r\nimport * as mainAction from '../../store/acions/mainAction'\r\n\r\nclass Questionnaire extends Component {\r\n    state = { \r\n        quest1:\"0\",quest2:\"0\",\r\n        quest3:\"0\",quest4:\"0\",\r\n        quest5:\"0\",quest6:\"0\",\r\n        quest7:\"0\",quest8:\"0\",\r\n        quest9:\"0\",quest10:\"0\",\r\n        quest11:\"0\",quest12:\"0\",\r\n        gender:\"0\",\r\n        age:\"0\",\r\n        familyStatus:\"-\",\r\n        numOfKids:\"0\",\r\n        totalWorkYears:\"0\",\r\n        religionStatus:\"-\",\r\n        numOfEmployers:\"0\",\r\n        insurenceEmployers:\"0\",\r\n        areYouManager:\"no\",\r\n        numOfEmployees:\"0\"\r\n     }\r\n\r\n    test = (state)=>\r\n    {\r\n        console.log(state)\r\n    }\r\n    updateState =(e,key)=>{\r\n        this.setState({[key]:e.target.value});\r\n        console.log(this.state)\r\n    }\r\n    insertToServer =(state)=>\r\n    {\r\n        let versionNumer = Math.round(Math.random()*3)+1;\r\n        let userDetails = {...state,\r\n                    mobileDevice:(typeof window.orientation !== \"undefined\") || (navigator.userAgent.indexOf('IEMobile') !== -1),\r\n                    createTime:new Date().toString(),\r\n                    simulationType:versionNumer};\r\n        this.props.updateVersion(versionNumer);\r\n        this.props.insertUserDetails(userDetails);\r\n        this.props.changeStage(\"explanation\");\r\n        console.log(this.state);\r\n    }\r\n    render() { \r\n        const selectOptions =['-','1','2','3', '4','5','6','7'];\r\n\r\n\r\n\r\n        return ( \r\n            <div id=\"mainDivQuestionnaire\" >\r\n                <div id=\"discriptionsQuestionnaire\" >\r\n                המשפטים שלפניך מתייחסים לאופן שבו אתה מרגיש במערכות יחסים קרובות עם אנשים אחרים. <br></br>\r\n                המונח 'אנשים אחרים' מתייחס לאנשים הנמצאים ביחסים קרובים אתך.<br></br>\r\n                אנו מתעניינים בדרך שבה אתה חווה בדרך כלל מערכות יחסים.<br></br><br></br>\r\n                <b>התייחס לכל משפט על ידי דרוג עד כמה אתה מסכים או אינך מסכים אתו, על ידי שימוש בסולם שלהלן:</b>\r\n                </div>\r\n                <Table textAlign=\"right\">\r\n                    <Table.Header>\r\n                        <Table.Row textAlign=\"center\">\r\n                            <Table.HeaderCell>עד כמה אתה מסכים או אינך מסכים עם כל משפט:</Table.HeaderCell>\r\n                            <Table.HeaderCell><span style={{color:\"green\"}}>מאוד מסכים-7 </span>\r\n                            <span style={{color:\"red\"}}>מאוד לא מסכים-1</span></Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        <Table.Row >\r\n                            <Table.Cell>1. זה עוזר לפנות לאנשים אחרים ברגעים שאני זקוק להם</Table.Cell>\r\n                            <Table.Cell>\r\n                                <select  value={this.state.quest1}value={this.state.quest1}  onChangeCapture={(e)=>this.updateState(e,\"quest1\")} className=\"questionnaireQuest\"> {selectOptions.map(s=>{\r\n                                    return <option key={s+Math.random()} value={s}>{s}</option>\r\n                                })}\r\n                                </select> \r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>2. אני נזקק להרבה אישורים לכך שאני אהוב על ידי אנשים הקרובים לי</Table.Cell>\r\n                            <Table.Cell>\r\n                                <select  value={this.state.quest2} onChangeCapture={(e)=>this.updateState(e,[\"quest2\"])}className=\"questionnaireQuest\"> {selectOptions.map(s=>{\r\n                                    return <option key={s+Math.random()} value={s}>{s}</option>\r\n                                })}\r\n                                </select>\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>3. אני רוצה להתקרב לאנשים אחרים אבל אני ממשיך לסגת מהם</Table.Cell>\r\n                            <Table.Cell>\r\n                                <select  value={this.state.quest3} onChangeCapture={(e)=>this.updateState(e,[\"quest3\"])}className=\"questionnaireQuest\"> {selectOptions.map(s=>{\r\n                                    return <option key={s+Math.random()} value={s}>{s}</option>\r\n                                })}\r\n                                </select>\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>4. אני מרגיש שאנשים אחרים אינם רוצים להתקרב כפי שאני הייתי רוצה</Table.Cell>\r\n                            <Table.Cell>\r\n                                <select  value={this.state.quest4} onChangeCapture={(e)=>this.updateState(e,[\"quest4\"])}className=\"questionnaireQuest\"> {selectOptions.map(s=>{\r\n                                    return <option key={s+Math.random()} value={s}>{s}</option>\r\n                                })}\r\n                                </select>\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>5. אני פונה לאנשים אחרים בקשר להרבה דברים כולל נחמה ואיש</Table.Cell>\r\n                                                        <Table.Cell>\r\n                                <select  value={this.state.quest5} onChangeCapture={(e)=>this.updateState(e,[\"quest5\"])}className=\"questionnaireQuest\"> {selectOptions.map(s=>{\r\n                                    return <option key={s+Math.random()} value={s}>{s}</option>\r\n                                })}\r\n                                </select>\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>6. הרצון שלי להיות מאוד קרוב, לעתים מרחיק ממני אנשים</Table.Cell>\r\n                                                        <Table.Cell>\r\n                                <select  value={this.state.quest6} onChangeCapture={(e)=>this.updateState(e,[\"quest6\"])}className=\"questionnaireQuest\"> {selectOptions.map(s=>{\r\n                                    return <option key={s+Math.random()} value={s}>{s}</option>\r\n                                })}\r\n                                </select>\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>7. אני מנסה להימנע מלהתקרב יותר מדי לאנשים אחרים</Table.Cell>\r\n                                                        <Table.Cell>\r\n                                <select  value={this.state.quest7} onChangeCapture={(e)=>this.updateState(e,[\"quest7\"])}className=\"questionnaireQuest\"> {selectOptions.map(s=>{\r\n                                    return <option key={s+Math.random()} value={s}>{s}</option>\r\n                                })}\r\n                                </select>\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>8. אינני מודאג לעתים קרובות מדי מכך שינטשו אותי</Table.Cell>\r\n                                                        <Table.Cell>\r\n                                <select  value={this.state.quest8} onChangeCapture={(e)=>this.updateState(e,[\"quest8\"])}className=\"questionnaireQuest\"> {selectOptions.map(s=>{\r\n                                    return <option key={s+Math.random()} value={s}>{s}</option>\r\n                                })}\r\n                                </select>\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>9. בדרך כלל אני דן בבעיות ובדאגות שלי עם אנשים הקרובים לי</Table.Cell>\r\n                                                        <Table.Cell>\r\n                                <select  value={this.state.quest9} onChangeCapture={(e)=>this.updateState(e,[\"quest9\"])}className=\"questionnaireQuest\"> {selectOptions.map(s=>{\r\n                                    return <option key={s+Math.random()} value={s}>{s}</option>\r\n                                })}\r\n                                </select>\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>10. אני נעשה מתוסכל כאשר אנשים אחרים לא נמצאים איתי במידה בה הייתי רוצה שיהיו</Table.Cell>\r\n                                                        <Table.Cell>\r\n                                <select  value={this.state.quest10} onChangeCapture={(e)=>this.updateState(e,[\"quest10\"])}className=\"questionnaireQuest\"> {selectOptions.map(s=>{\r\n                                    return <option key={s+Math.random()} value={s}>{s}</option>\r\n                                })}\r\n                                </select>\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>11. אני נעשה מתוח כאשר אנשים אחרים מתקרבים אלי יותר מדי</Table.Cell>\r\n                                                        <Table.Cell>\r\n                                <select  value={this.state.quest11} onChangeCapture={(e)=>this.updateState(e,[\"quest11\"])}className=\"questionnaireQuest\"> {selectOptions.map(s=>{\r\n                                    return <option key={s+Math.random()} value={s}>{s}</option>\r\n                                })}\r\n                                </select>\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>12. אני דואג שלאנשים אחרים לא יהיה אכפת ממני באותה מידה שבה לי אכפת מהם</Table.Cell>\r\n                                                        <Table.Cell>\r\n                                <select  value={this.state.quest12} onChangeCapture={(e)=>this.updateState(e,[\"quest12\"])}className=\"questionnaireQuest\"> {selectOptions.map(s=>{\r\n                                    return <option key={s+Math.random()} value={s}>{s}</option>\r\n                                })}\r\n                                </select>\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                    </Table.Body>\r\n                </Table>\r\n\r\n                <Table  textAlign=\"right\">\r\n                    <Table.Header>\r\n                    <Table.Row><Table.HeaderCell> פרטים כלליים</Table.HeaderCell><Table.HeaderCell>אנא מלא/י את הערך</Table.HeaderCell></Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        <Table.Row>\r\n                        <Table.Cell>מין</Table.Cell>\r\n                                <Table.Cell>\r\n                                <select  onChangeCapture={(e)=>this.updateState(e,[\"gender\"])} className=\"questionnaireQuest\"> \r\n                                    <option value=\"-\">-</option>\r\n                                    <option  value=\"male\">זכר</option>\r\n                                    <option  value=\"female\">נקבה</option>\r\n                                </select>\r\n                            </Table.Cell>\r\n                           \r\n                        </Table.Row>\r\n                        <Table.Row> \r\n                                <Table.Cell>גיל</Table.Cell>\r\n                                <Table.Cell>\r\n                                    <Input onChangeCapture={(e)=>this.updateState(e,[\"age\"])} className=\"questionnaireQuest\" type=\"number\"/>\r\n                                </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                        <Table.Cell>מצב משפחתי</Table.Cell>\r\n                                <Table.Cell>\r\n                                <select  onChangeCapture={(e)=>this.updateState(e,[\"familyStatus\"])} className=\"questionnaireQuest\"> \r\n                                    <option value=\"-\">-</option>\r\n                                    <option  value=\"single\">רווק/ה</option>\r\n                                    <option  value=\"married\">נשוי/ה</option>\r\n                                    <option  value=\"divorcee\">גרוש/ה</option>\r\n                                    <option  value=\"widow\">אלמן/ה</option>\r\n                                </select>\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row> \r\n                                <Table.Cell>מספר ילדים</Table.Cell>\r\n                                <Table.Cell>\r\n                                    <Input onChangeCapture={(e)=>this.updateState(e,[\"numOfKids\"])} className=\"questionnaireQuest\" type=\"number\"/>\r\n                                </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row> \r\n                                <Table.Cell> שנות עבודה בכלל</Table.Cell>\r\n                                <Table.Cell>\r\n                                    <Input onChangeCapture={(e)=>this.updateState(e,[\"totalWorkYears\"])} className=\"questionnaireQuest\" type=\"number\"/>\r\n                                </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row> \r\n                                <Table.Cell>הגדר את יחסך לדת</Table.Cell>\r\n                                <Table.Cell>\r\n                                <select  onChangeCapture={(e)=>this.updateState(e,[\"religionStatus\"])} className=\"questionnaireQuest\"> \r\n                                    <option value=\"-\">-</option>\r\n                                    <option  value=\"chiloni\">חילוני</option>\r\n                                    <option  value=\"masorati\">מסורתי</option>\r\n                                    <option  value=\"dati\">דתי</option>\r\n                                    <option  value=\"charedi\">חרדי</option>\r\n                                </select>\r\n                                </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row> \r\n                                <Table.Cell> בכמה אירגונים עבדת לפני עבודתך הנוכחית</Table.Cell>\r\n                                <Table.Cell>\r\n                                    <Input onChangeCapture={(e)=>this.updateState(e,\"numOfEmployers\")} className=\"questionnaireQuest\" type=\"number\"/>\r\n                                </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row> \r\n                                <Table.Cell> כמה מהם בתחום הביטוח</Table.Cell>\r\n                                <Table.Cell>\r\n                                    <Input className=\"questionnaireQuest\" type=\"number\" onChangeCapture={(e)=>this.updateState(e,\"insurenceEmployers\")}/>\r\n                                </Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row> \r\n                                <Table.Cell> האם אתה מנהל</Table.Cell>\r\n                                <select   onChangeCapture={(e)=>this.updateState(e,\"areYouManager\")} className=\"questionnaireQuest\"> \r\n                                    <option value=\"no\">לא</option>\r\n                                    <option  value=\"yes\">כן</option>\r\n                                </select>\r\n                        </Table.Row>\r\n                        {(this.state.areYouManager === \"yes\")?\r\n                                    (<Table.Row> \r\n                                        <Table.Cell>כמה עובדים אתה מנהל</Table.Cell>\r\n                                        <Table.Cell>\r\n                                            <Input className=\"questionnaireQuest\" onChangeCapture={(e)=>this.updateState(e,\"numOfEmployees\")} type=\"number\"/>\r\n                                        </Table.Cell>\r\n                                  </Table.Row>)\r\n                                  :null}\r\n                        <Table.Row textAlign=\"center\">\r\n                            \r\n                            <Table.Cell>\r\n                                <Button size=\"big\" color='green' onClick={()=>this.insertToServer(this.state)}>המשך </Button>\r\n                            </Table.Cell>\r\n                            <Table.Cell></Table.Cell>\r\n                        </Table.Row>\r\n                    </Table.Body>\r\n                  \r\n                </Table>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\n\r\n \r\n\r\nconst mapDispatchToProps = dispatch =>\r\n{\r\n    return {\r\n        insertUserDetails: (userDetails) => dispatch(mainAction.insertNewUserDetails(userDetails)),\r\n        changeStage: (newStage) => dispatch(mainAction.changeStageDispach(newStage)),\r\n        updateVersion: (versionNum) => dispatch(mainAction.UpdateVersion(versionNum))\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(Questionnaire);","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as mainAction from '../../store/acions/mainAction'\r\nimport { Message,Input, Button } from 'semantic-ui-react';\r\nimport '../css/Explanation.css'\r\n\r\nclass Explanation extends Component {\r\n\r\n    state = {  }\r\n\r\n\r\n\r\n    nextLevel=()=>{\r\n        this.props.finishExplain(this.props.userId,new Date().toString());\r\n        console.log(\"userId\",this.props.userId,\"date\",new Date().toString())\r\n        this.props.changeStage(\"simulation\");\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        let explanationText = null;\r\n        if(this.props.version === 1 || this.props.version === 2)\r\n        {\r\n            explanationText = (\r\n                <Message>\r\n                    <Message.Header>סימולטור השקעה</Message.Header>\r\n                    <p>\r\n                    במערכת ניהול ההשקעות אתה נדרש להשקיע במשך שלושים סבבי השקעה. בסבב הראשון תקבל סכום של 1000 להשקעה. \r\n                    <br></br>\r\n                   <b> תוכל לבחור להשקיע באחד מבין שלושה מסלולי השקעה:</b>\r\n                    <br></br>\r\n                    <b> א.\tמסלול בסיכון גבוה </b> שבו  הסכום שתשקיע מדי תקופה יהיה בעל מאפיינים סטטיסטיים שנדגמו מתיק מניות בינ\"ל\r\n                        <br></br>\r\n                        <b> ב.\tמסלול בסיכון נמוך </b>, שבו  הסכום שתשקיע מדי תקופה יהיה בעל מאפיינים סטטיסטיים שנדגמו מתיק אג\"ח ממשלתי \r\n                        <br></br>\r\n                        <b>ג.\tמסלול בסיכון בינוני</b>, המשלב את התיק הראשון והתיק השני ,במשקלות שווים של 50% כ\"א והוא בעל מאפיינים סטטיסטיים מתאימים. \r\n                        <br></br>\r\n                        לאחר שתבחר, התוכנה תציג לך כמה תשואה צברת בסבב הראשון  ואת סך הסכום שעומד לרשותך ואז תתבקש להשקיע מחדש את הסכום הצבור ועוד 1000 ₪ חדשים בסבב השני.\r\n                        <br></br>בכל סבב תתבקש לקבל החלטה מחדש \r\n                        התהליך נמשך במשך 30 פעמים בסך הכל. השלמת ההשקעה בפעם ה-30 משלימה את המשימה    הפיננסית \r\n\r\n                    </p>\r\n                </Message>\r\n          )\r\n        }else  if(this.props.version === 3 || this.props.version === 4){\r\n            explanationText = (\r\n                <Message>\r\n                    <Message.Header>סימולטור פנסיוני</Message.Header>\r\n                    <p>\r\n                    מערכת ניהול ההשקעות הפנסיונית מדמה השקעה לטווח של 30 שנה עד הפרישה. במערכת אתה מתבקש  להשקיע את כספי הפנסיה במשך שלושים סבבי השקעה. בכל שנה תקבל סכום של 1000 להשקעה. \r\n                    <br></br>\r\n                   <b> תוכל לבחור להשקיע באחד מבין שלושה מסלולי השקעה:</b>\r\n                    <br></br>\r\n                    <b> א.\tמסלול בסיכון גבוה </b> שבו  הסכום שתשקיע מדי תקופה יהיה בעל מאפיינים סטטיסטיים שנדגמו מתיק מניות בינ\"ל\r\n                        <br></br>\r\n                        <b> ב.\tמסלול בסיכון נמוך </b>, שבו  הסכום שתשקיע מדי תקופה יהיה בעל מאפיינים סטטיסטיים שנדגמו מתיק אג\"ח ממשלתי \r\n                        <br></br>\r\n                        <b>ג.\tמסלול בסיכון בינוני</b>, המשלב את התיק הראשון והתיק השני ,במשקלות שווים של 50% כ\"א והוא בעל מאפיינים סטטיסטיים מתאימים. \r\n                        <br></br>\r\n                        לאחר שתבחר, התוכנה תציג לך כמה תשואה צברת בסבב הראשון  ואת סך הסכום שעומד לרשותך ואז תתבקש להשקיע מחדש את הסכום הצבור ועוד 1000 ₪ חדשים בסבב השני.\r\n                        <br></br> בכל סבב תתבקש לקבל החלטה מחדש \r\n                        התהליך נמשך במשך 30 פעמים בסך הכל. השלמת ההשקעה בפעם ה-30 משלימה את המשימה    הפיננסית \r\n\r\n                    </p>\r\n                </Message>)\r\n        }\r\n\r\n        return ( \r\n            <div className=\"explanationMainDiv\" style={{textAlign:\"center\"}}>\r\n                {explanationText}\r\n                <Button onClick={()=>this.nextLevel()} size=\"big\" color=\"green\">הבנתי, בוא נתחיל</Button>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\n\r\nconst mapStateToProp = state =>\r\n{\r\n    return {\r\n         stage: state.main.stage,\r\n         version: state.main.version,\r\n         userId:state.main.userId\r\n        }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n{\r\n    return {\r\n        changeStage: (newStage) => dispatch(mainAction.changeStageDispach(newStage)),\r\n        finishExplain:(userId,finishTime)=> dispatch(mainAction.finishExplanationUpdate(userId,finishTime))\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProp,mapDispatchToProps)(Explanation);","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport '../css/simulation.css'\r\nimport {Line} from 'react-chartjs-2';\r\nimport * as mainAction from '../../store/acions/mainAction'\r\nimport { Table,Input, Button } from 'semantic-ui-react';\r\n\r\nclass Simulation extends Component {\r\n    state = { \r\n        isMobile:(typeof window.orientation !== \"undefined\") || (navigator.userAgent.indexOf('IEMobile') !== -1)\r\n     }\r\n    render() { \r\n\r\n        \r\n\r\n\r\n\r\n        return ( \r\n            <div id=\"mainDivSimulation\">\r\n             \r\n             <div id=\"simulationHeader\">\r\n                אנא בחר/י את מסלול ההשקעה בתקופה \r\n             </div>\r\n\r\n             <div id=\"simulationButtonsSection\">\r\n             <Button size={(this.state.isMobile)?\"tiny\":\"big\"} \r\n                    style={{marginRight:\"2%\",marginTop:\"1%\"}} color='teal'> מסלול בסיכון גבוה </Button>\r\n                    \r\n            <br></br><Button size={(this.state.isMobile)?\"tiny\":\"big\"} style={{marginRight:\"2%\",marginTop:\"1%\"}} color='blue'> מסלול בסיכו בינוי-גבוה </Button>\r\n            <br></br><Button size={(this.state.isMobile)?\"tiny\":\"big\"} style={{marginRight:\"2%\",marginTop:\"1%\"}} color='violet'> מסלול בסיכון בינוני-נמוך </Button>\r\n            <br></br><Button size={(this.state.isMobile)?\"tiny\":\"big\"} style={{marginRight:\"2%\",marginTop:\"1%\"}} color='purple'> מסלול בסיכון נמוך </Button>\r\n           \r\n             </div>\r\n                \r\n                \r\n                <div id=\"simulationChartDiv\">\r\n                <Line  width={(this.state.isMobile)?\"300\":\"1000\"} \r\n                height={(this.state.isMobile)?\"300\":\"500\"}\r\n                        options={{\r\n                            // padding:\"0px\",\r\n                            responsive:false,\r\n                            maintainAspectRatio:false,\r\n                            defaultFontSize:\"30px\",\r\n                            width:\"400\",\r\n                            height:\"400\",\r\n                            hover:true,\r\n                            \r\n                            legend:{\r\n                                display:true,\r\n                                position:'right'\r\n                            }}}\r\n                    \r\n            data={this.props.chartData.data }/>\r\n            </div>\r\n\r\n\r\n\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProp = state =>\r\n{\r\n    return {\r\n        chartData: state.main.chartData \r\n        }\r\n}\r\n \r\nconst mapDispatchToProps = dispatch =>\r\n{\r\n    return {\r\n        changeStage: (newStage) => dispatch(mainAction.changeStageDispach(newStage))\r\n    }\r\n}\r\nexport default connect(mapStateToProp,mapDispatchToProps)(Simulation);","import React, { Component } from 'react';\r\nimport Opening from '../../components/js/Opening';\r\nimport Questionnaire from '../../components/js/Questionnaire';\r\nimport * as mainAction from '../../store/acions/mainAction'\r\nimport {connect} from 'react-redux';\r\nimport Explanation from '../../components/js/Explanation'\r\nimport Simulation from '../../components/js/Simulation'\r\nclass MainPage extends Component {\r\n    state = { \r\n        stage:this.props.stage\r\n     }\r\n\r\n\r\n     componentDidMount=()=>{\r\n         setTimeout(() => {\r\n             this.props.changeStage(\"user\");\r\n         }, 2000);\r\n     }\r\n\r\n\r\n    render() { \r\n\r\n        let stage =null;\r\n        if(this.props.stage === \"opening\"){\r\n            stage =  <Opening />;\r\n        }else if(this.props.stage === \"user\"){\r\n            stage = <Questionnaire/>;\r\n        }else if(this.props.stage === \"explanation\")\r\n        {\r\n            stage = <Explanation />\r\n        }else if(this.props.stage === \"simulation\")\r\n        {\r\n            stage = <Simulation />\r\n        }\r\n\r\n        return ( \r\n            <React.Fragment>\r\n\r\n                {stage}\r\n          \r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapStateToProp = state =>\r\n{\r\n    return {\r\n         stage: state.main.stage \r\n        }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n{\r\n    return {\r\n        changeStage: (newStage) => dispatch(mainAction.changeStageDispach(newStage))\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProp,mapDispatchToProps)(MainPage);","import React from 'react';\n\nimport './App.css';\nimport HomePage from '../src/containers/js/MainPage'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <HomePage></HomePage>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../acions/actionTypes'\r\n\r\nconst initialState = {\r\n    stage:\"opening\",\r\n    userId: null,\r\n    version:null,\r\n    chartData:{\r\n        cycleNum:0,\r\n        totalPortfolioAssets:0,\r\n        totalMarketAssets:0,\r\n        totalPortfolioYield:0,\r\n        totalMarketYield:0,\r\n        data:{\r\n            labels:[1],\r\n            datasets:[{\r\n                label:\"התיק שלך\",\r\n                borderColor:'green',\r\n                data:[0]\r\n            },{\r\n                label:\"תיק השוק\",\r\n                borderColor:'orange',\r\n                data:[0]  \r\n            }]\r\n            }\r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state = initialState ,action) => {\r\n    switch(action.type){\r\n        case actionTypes.INSERT_NEW_USER:\r\n        {\r\n            return {\r\n               ...state,\r\n               userId:action.val\r\n               \r\n            }\r\n        }  \r\n        case actionTypes.CHANGE_STAGE:\r\n            {\r\n                return {\r\n                   ...state,\r\n                   stage:action.val\r\n                   \r\n                }\r\n            }\r\n            case actionTypes.UPDATE_VERSION_NUMBER:\r\n                {\r\n                    return {\r\n                       ...state,\r\n                       version:action.val\r\n                       \r\n                    }\r\n                }   \r\n    }\r\n    \r\n    return state;\r\n}\r\n\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport thunk from 'redux-thunk';\nimport  {createStore, combineReducers,applyMiddleware,compose} from 'redux';\nimport {Provider} from 'react-redux';\nimport mainReducer from '../src/store/reduciers/mainReducer'\n\n\n\nconst rootReducer = combineReducers({\n    main:mainReducer\n});\n\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ||compose ;\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(<Provider store={store} ><App /></Provider>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}